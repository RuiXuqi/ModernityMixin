apply from: 'gradle/scripts/helpers.gradle'

repositories {
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    exclusiveContent {
        forRepository {
            maven {
                name 'CurseMaven'
                url 'https://cursemaven.com'
            }
        }
        filter {
            includeGroup 'curse.maven'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name 'Modrinth'
                url 'https://api.modrinth.com/maven'
            }
        }
        filter {
            includeGroup 'maven.modrinth'
        }
    }
    mavenLocal() // Must be last for caching to work
}

dependencies {
    // Include StripLatestForgeRequirements by default for the dev env, saves everyone a hassle
    runtimeOnly 'com.cleanroommc:strip-latest-forge-requirements:1.0'
    // Include OSXNarratorBlocker by default for the dev env, for M1+ Macs
    runtimeOnly 'com.cleanroommc:osxnarratorblocker:1.0'

    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - Deobfuscating dependencies:
    // rfg.deobf('curse.maven:had-enough-items-557549:4543375')
    // By wrapping a dependency descriptor in rfg.deobf() method call, the dependency is queued for deobfuscation
    // When deobfuscating, RFG respects the mapping_channel + mapping_version stated in gradle.properties

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies
    // embed = bundle dependencies into final output artifact (no relocation)

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }

    // Dependencies
    // ConfigAnyTime 3.0
    implementation 'com.cleanroommc:configanytime:3.0'

    // Util mods
    // JECh 3.7.2
    runtimeOnly 'curse.maven:just-enough-characters-250702:4692184'
    // HECh 1.4.1
    runtimeOnly 'curse.maven:had-enough-characters-640802:4874506'
    // TOPCE 1.3.5-fix3
    runtimeOnly 'curse.maven:the-one-probe-community-edition-885670:6736118'
    // BilingualName 2.1
    runtimeOnly 'curse.maven:bilingualname-417557:6528166'

    // Mixin target mods
    // Should be compileOnly after the work is done
    // Avaritia UEL 3.3.0.46-hotfix3
    //implementation rfg.deobf('curse.maven:avaritia-1-1x-unofficial-1165010:6542330')
    // Had Enough Items 4.29.2
    implementation rfg.deobf('curse.maven:had-enough-items-557549:6863110')
    // PnC 0.11.15-398
    implementation rfg.deobf('curse.maven:pneumaticcraft-repressurized-281849:2978408')

    // Libs
    // Only added when necessary
    // CodeChicken Lib 3.2.3.358
    //runtimeOnly 'curse.maven:codechicken-lib-1-8-242818:2779848'
}